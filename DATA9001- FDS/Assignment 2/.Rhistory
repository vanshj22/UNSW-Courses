)
# Print column headers
cat(sprintf("%-4s %-20s %-15s %-15s %-12s %-10s %-10s %-15s %-20s %-12s\n",
"Rank", "Suburb", "Current_Price", "Predicted_Price", "Price_change",
"Price_Gr%", "Income_Gr%", "Unemployment%", "Population_Gr_Ch%", "Priority"))
cat(paste(rep("-", 140), collapse = ""), "\n")
# Print each row
for(i in 1:nrow(display_table)) {
cat(sprintf("%-4d %-20s $%-14s $%-14s $%-11s %-10.1f %-10.1f %-15.1f %-20.1f %-12s\n",
display_table$Rank[i],
substr(display_table$Suburb[i], 1, 20),  # Truncate long suburb names
display_table$Current_Price_2023[i],
display_table$Predicted_Price_2024[i],
display_table$Price_change[i],
display_table$Price_Growth_Pct[i],
display_table$Income_Growth_Pct[i],
display_table$Unemployment_Change_Pct[i],
display_table$Population_Growth_Change_Pct[i],
display_table$Priority_Area[i]))
}
# ============================================================================
# PART 3: INDIVIDUAL ANALYSIS SECTIONS WITH PLOTS
# ============================================================================
cat("\n\nINDIVIDUAL ANALYSIS SECTIONS\n")
cat("============================\n\n")
# Section 1: Price Growth Analysis by Suburb
cat("1. PRICE GROWTH ANALYSIS BY SUBURB\n")
cat("-----------------------------------\n")
top_15_price_growth <- head(investment_analysis, 15)
p_price_growth <- ggplot(top_15_price_growth, aes(x = reorder(Suburb_name, Price_change_percent),
y = Price_change_percent)) +
geom_col(fill = "steelblue", alpha = 0.8) +
geom_text(aes(label = paste0(round(Price_change_percent, 1), "%")),
hjust = -0.1, size = 3, fontface = "bold") +
coord_flip() +
labs(title = "Top 15 Suburbs by Expected Price Growth (2024)",
subtitle = paste("Based on", best_model),
x = "Suburb", y = "Expected Price Growth (%)") +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 11),
axis.text.y = element_text(size = 9)
)
print(p_price_growth)
# Section 2: Population Growth Impact
cat("\n4. POPULATION GROWTH IMPACT\n")
cat("---------------------------\n")
p_population_impact <- ggplot(investment_analysis, aes(x = Predicted_population_growth_2024,
y = Price_change_percent)) +
geom_point(aes(color = Predicted_median_income_2024), alpha = 0.7, size = 2) +
geom_smooth(method = "lm", se = TRUE, color = "red", alpha = 0.3) +
scale_color_gradient(low = "lightblue", high = "darkblue", name = "Median\nIncome 2024",
labels = comma) +
labs(title = "Population Growth vs Price Growth",
subtitle = "Higher population growth drives housing demand",
x = "Predicted Population Growth 2024 (%)",
y = "Price Change (%)") +
theme_minimal()
print(p_population_impact)
# Section 5: Current Price vs Expected Return Analysis
cat("\n5. CURRENT PRICE VS EXPECTED RETURN ANALYSIS\n")
cat("---------------------------------------------\n")
# Identify best suburbs for different price ranges
best_affordable <- investment_analysis %>%
filter(Median_price_2023 <= quantile(Median_price_2023, 0.33)) %>%
slice_max(Price_change_percent, n = 1)
best_midrange <- investment_analysis %>%
filter(Median_price_2023 > quantile(Median_price_2023, 0.33) &
Median_price_2023 <= quantile(Median_price_2023, 0.67)) %>%
slice_max(Price_change_percent, n = 1)
best_premium <- investment_analysis %>%
filter(Median_price_2023 > quantile(Median_price_2023, 0.67)) %>%
slice_max(Price_change_percent, n = 1)
p_price_return <- ggplot(investment_analysis, aes(x = Median_price_2023, y = Price_change_percent)) +
geom_point(aes(color = Income_change_percent), alpha = 0.7, size = 2) +
geom_smooth(method = "lm", se = TRUE, color = "red", alpha = 0.3) +
# Highlight best suburbs in each category
geom_point(data = best_affordable, aes(x = Median_price_2023, y = Price_change_percent),
color = "green", size = 4, shape = 21, fill = "lightgreen", stroke = 2) +
geom_point(data = best_midrange, aes(x = Median_price_2023, y = Price_change_percent),
color = "orange", size = 4, shape = 21, fill = "lightyellow", stroke = 2) +
geom_point(data = best_premium, aes(x = Median_price_2023, y = Price_change_percent),
color = "purple", size = 4, shape = 21, fill = "lightpink", stroke = 2) +
# Add labels for best suburbs
geom_text(data = best_affordable, aes(x = Median_price_2023, y = Price_change_percent,
label = paste("Affordable:", Suburb_name)),
vjust = -1.5, hjust = 0.5, size = 3, fontface = "bold", color = "green") +
geom_text(data = best_midrange, aes(x = Median_price_2023, y = Price_change_percent,
label = paste("Mid-range:", Suburb_name)),
vjust = -1.5, hjust = 0.5, size = 3, fontface = "bold", color = "orange") +
geom_text(data = best_premium, aes(x = Median_price_2023, y = Price_change_percent,
label = paste("Premium:", Suburb_name)),
vjust = -1.5, hjust = 0.5, size = 3, fontface = "bold", color = "purple") +
scale_x_continuous(labels = comma) +
scale_color_gradient2(low = "red", mid = "yellow", high = "green", midpoint = 0,
name = "Income\nChange %") +
labs(title = "Current Price vs Expected Return by Price Segment",
subtitle = "Best investment opportunities across different price ranges",
x = "Current Median Price 2023 ($)",
y = "Expected Price Change (%)") +
theme_minimal()
print(p_price_return)
# ============================================================================
# PART 4: FINAL INVESTMENT RECOMMENDATIONS
# ============================================================================
# Overall best investment
best_overall <- investment_analysis[1, ]
cat("🏆 OVERALL BEST INVESTMENT OPPORTUNITY\n")
cat("--------------------------------------\n")
cat("Suburb:", best_overall$Suburb_name, "\n")
cat("Current Median Price (2023): $", format(best_overall$Median_price_2023, big.mark = ","), "\n")
cat("Predicted Median Price (2024): $", format(best_overall$Predicted_median_price_2024, big.mark = ","), "\n")
cat("Expected Price Growth: $", format(best_overall$Price_change, big.mark = ","),
" (", round(best_overall$Price_change_percent, 2), "%)\n")
cat("Income Growth: ", round(best_overall$Income_change_percent, 2), "%\n")
cat("Unemployment Change: ", round(best_overall$Unemployment_change_percent, 2), "%\n")
cat("Population Growth Change: ", round(best_overall$Population_growth_change_percent, 2), "%\n")
cat("Priority Growth Area:", ifelse(best_overall$Predicted_priority_growth_area_2024 == 1, "Yes", "No"), "\n")
# Investment summary visualization
top_10_final <- head(investment_analysis, 10)
p_final_summary <- ggplot(top_10_final, aes(x = reorder(Suburb_name, Price_change_percent),
y = Price_change_percent)) +
geom_col(aes(fill = factor(Predicted_priority_growth_area_2024)), alpha = 0.8) +
geom_text(aes(label = paste0(round(Price_change_percent, 1), "%")),
hjust = -0.1, size = 3, fontface = "bold") +
coord_flip() +
scale_fill_manual(values = c("0" = "steelblue", "1" = "red"),
labels = c("Regular Area", "Priority Growth Area")) +
labs(title = "Top 10 Investment Opportunities for 2024",
subtitle = "Based on comprehensive economic analysis and predictive modeling",
x = "Suburb", y = "Expected Price Growth (%)",
fill = "Area Type") +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 11),
axis.text.y = element_text(size = 9),
legend.position = "bottom"
)
print(p_final_summary)
top_30_suburbs
cat("COMPREHENSIVE INVESTMENT ANALYSIS TABLE\n")
cat("======================================\n\n")
# Create a properly formatted top 30 suburbs table with multiple sorting criteria
# Sort by Price_change (desc), Population_growth_change (desc), Unemployment_change (desc)
investment_sorted <- investment_analysis[order(-investment_analysis$Price_change,
-investment_analysis$Population_growth_change,
-investment_analysis$Unemployment_change), ]
top_30_suburbs <- investment_sorted[1:30, ]
# Create a clean data frame for display
display_table <- data.frame(
Rank = 1:30,
Suburb = top_30_suburbs$Suburb_name,
Current_Price_2023 = format(round(top_30_suburbs$Median_price_2023, 0), big.mark = ","),
Predicted_Price_2024 = format(round(top_30_suburbs$Predicted_median_price_2024, 0), big.mark = ","),
Price_change = format(round(top_30_suburbs$Price_change, 0), big.mark = ","),
Price_Growth_Pct = round(top_30_suburbs$Price_change_percent, 1),
Income_Growth_Pct = round(top_30_suburbs$Income_change_percent, 1),
Unemployment_Change_Pct = round(top_30_suburbs$Unemployment_change_percent, 1),
Population_Growth_Change_Pct = round(top_30_suburbs$Population_growth_change_percent, 1),
Priority_Area = ifelse(top_30_suburbs$Predicted_priority_growth_area_2024 == 1, "Yes", "No")
)
# Print column headers
cat(sprintf("%-4s %-20s %-15s %-15s %-12s %-10s %-10s %-15s %-20s %-12s\n",
"Rank", "Suburb", "Current_Price", "Predicted_Price", "Price_change",
"Price_Gr%", "Income_Gr%", "Unemployment%", "Population_Gr_Ch%", "Priority"))
cat(paste(rep("-", 140), collapse = ""), "\n")
# Print each row
for(i in 1:nrow(display_table)) {
cat(sprintf("%-4d %-20s $%-14s $%-14s $%-11s %-10.1f %-10.1f %-15.1f %-20.1f %-12s\n",
display_table$Rank[i],
substr(display_table$Suburb[i], 1, 20),  # Truncate long suburb names
display_table$Current_Price_2023[i],
display_table$Predicted_Price_2024[i],
display_table$Price_change[i],
display_table$Price_Growth_Pct[i],
display_table$Income_Growth_Pct[i],
display_table$Unemployment_Change_Pct[i],
display_table$Population_Growth_Change_Pct[i],
display_table$Priority_Area[i]))
}
# Display comprehensive investment table
cat("COMPREHENSIVE INVESTMENT ANALYSIS TABLE\n")
cat("======================================\n\n")
# Create a properly formatted top 30 suburbs table with multiple sorting criteria
# Sort by Price_change (desc), Population_growth_change (desc), Unemployment_change (desc)
investment_sorted <- investment_analysis[order(-investment_analysis$Price_change,
-investment_analysis$Population_growth_change,
-investment_analysis$Unemployment_change), ]
top_30_suburbs <- investment_sorted[1:30, ]
# Create a clean data frame for display
display_table <- data.frame(
Rank = 1:30,
Suburb = top_30_suburbs$Suburb_name,
Current_Price_2023 = format(round(top_30_suburbs$Median_price_2023, 0), big.mark = ","),
Predicted_Price_2024 = format(round(top_30_suburbs$Predicted_median_price_2024, 0), big.mark = ","),
Price_change = format(round(top_30_suburbs$Price_change, 0), big.mark = ","),
Price_Growth_Pct = round(top_30_suburbs$Price_change_percent, 1),
Income_Growth_Pct = round(top_30_suburbs$Income_change_percent, 1),
Unemployment_Change_Pct = round(top_30_suburbs$Unemployment_change_percent, 1),
Population_Growth_Change_Pct = round(top_30_suburbs$Population_growth_change_percent, 1),
Priority_Area = ifelse(top_30_suburbs$Predicted_priority_growth_area_2024 == 1, "Yes", "No")
)
output_lines <- c()
# Header
output_lines <- c(output_lines, "COMPREHENSIVE INVESTMENT ANALYSIS TABLE")
output_lines <- c(output_lines, "========================================\n")
# Column Headers
header <- sprintf("%-4s %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
"Rank", "Suburb", "2023 Price", "2024 Predicted", "Price Change",
"Price %", "Income %", "Unemploy. %", "Pop. Growth %", "Priority")
output_lines <- c(output_lines, header)
output_lines <- c(output_lines, paste(rep("-", 150), collapse = ""))
# Data Rows
for (i in 1:nrow(display_table)) {
row_line <- sprintf("%-4d %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
i,
substr(display_table$Suburb_name[i], 1, 20),
paste0("$", format(round(display_table$Median_price_2023[i]), big.mark = ",")),
paste0("$", format(round(display_table$Predicted_median_price_2024[i]), big.mark = ",")),
paste0("$", format(round(display_table$Price_change[i]), big.mark = ",")),
paste0(round(display_table$Price_change_percent[i], 1), "%"),
paste0(round(display_table$Income_change_percent[i], 1), "%"),
paste0(round(display_table$Unemployment_change_percent[i], 1), "%"),
paste0(round(display_table$Population_growth_change_percent[i], 1), "%"),
ifelse(display_table$Predicted_priority_growth_area_2024[i] == 1, "Yes", "No")
)
output_lines <- c(output_lines, row_line)
}
investment_sorted <- investment_analysis[order(-investment_analysis$Price_change,
-investment_analysis$Population_growth_change,
-investment_analysis$Unemployment_change), ]
top_30_suburbs <- investment_sorted[1:30, ]
# Create a clean data frame for display
display_table <- data.frame(
Rank = 1:30,
Suburb = top_30_suburbs$Suburb_name,
Current_Price_2023 = format(round(top_30_suburbs$Median_price_2023, 0), big.mark = ","),
Predicted_Price_2024 = format(round(top_30_suburbs$Predicted_median_price_2024, 0), big.mark = ","),
Price_change = format(round(top_30_suburbs$Price_change, 0), big.mark = ","),
Price_Growth_Pct = round(top_30_suburbs$Price_change_percent, 1),
Income_Growth_Pct = round(top_30_suburbs$Income_change_percent, 1),
Unemployment_Change_Pct = round(top_30_suburbs$Unemployment_change_percent, 1),
Population_Growth_Change_Pct = round(top_30_suburbs$Population_growth_change_percent, 1),
Priority_Area = ifelse(top_30_suburbs$Predicted_priority_growth_area_2024 == 1, "Yes", "No")
)
output_lines <- c()
# Print column headers
header <- sprintf("%-4s %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
"Rank", "Suburb", "2023 Price", "2024 Predicted", "Price Change",
"Price %", "Income %", "Unemploy. %", "Pop. Growth %", "Priority")
output_lines <- c(output_lines, header)
output_lines <- c(output_lines, paste(rep("-", 150), collapse = ""))
for (i in 1:nrow(display_table)) {
row_line <- sprintf("%-4d %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
display_table$Rank[i],
substr(display_table$Suburb[i], 1, 20),
paste0("$", display_table$Current_Price_2023[i]),
paste0("$", display_table$Predicted_Price_2024[i]),
paste0("$", display_table$Price_change[i]),
paste0(display_table$Price_Growth_Pct[i], "%"),
paste0(display_table$Income_Growth_Pct[i], "%"),
paste0(display_table$Unemployment_Change_Pct[i], "%"),
paste0(display_table$Population_Growth_Change_Pct[i], "%"),
display_table$Priority_Area[i]
)
output_lines <- c(output_lines, row_line)
}
# Print all at once
cat(paste(output_lines, collapse = "\n"))
# ============================================================================
# Create a properly formatted top 30 suburbs table with multiple sorting criteria
# Sort by Price_change (desc), Population_growth_change (desc), Unemployment_change (desc)
investment_sorted <- investment_analysis[order(#-investment_analysis$Price_change,
-investment_analysis$Population_growth_change,
-investment_analysis$Unemployment_change), ]
top_30_suburbs <- investment_sorted[1:30, ]
# Create a clean data frame for display
display_table <- data.frame(
Rank = 1:30,
Suburb = top_30_suburbs$Suburb_name,
Current_Price_2023 = format(round(top_30_suburbs$Median_price_2023, 0), big.mark = ","),
Predicted_Price_2024 = format(round(top_30_suburbs$Predicted_median_price_2024, 0), big.mark = ","),
Price_change = format(round(top_30_suburbs$Price_change, 0), big.mark = ","),
Price_Growth_Pct = round(top_30_suburbs$Price_change_percent, 1),
Income_Growth_Pct = round(top_30_suburbs$Income_change_percent, 1),
Unemployment_Change_Pct = round(top_30_suburbs$Unemployment_change_percent, 1),
Population_Growth_Change_Pct = round(top_30_suburbs$Population_growth_change_percent, 1),
Priority_Area = ifelse(top_30_suburbs$Predicted_priority_growth_area_2024 == 1, "Yes", "No")
)
output_lines <- c()
# Print column headers
header <- sprintf("%-4s %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
"Rank", "Suburb", "2023 Price", "2024 Predicted", "Price Change",
"Price %", "Income %", "Unemploy. %", "Pop. Growth %", "Priority")
output_lines <- c(output_lines, header)
output_lines <- c(output_lines, paste(rep("-", 150), collapse = ""))
for (i in 1:nrow(display_table)) {
row_line <- sprintf("%-4d %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
display_table$Rank[i],
substr(display_table$Suburb[i], 1, 20),
paste0("$", display_table$Current_Price_2023[i]),
paste0("$", display_table$Predicted_Price_2024[i]),
paste0("$", display_table$Price_change[i]),
paste0(display_table$Price_Growth_Pct[i], "%"),
paste0(display_table$Income_Growth_Pct[i], "%"),
paste0(display_table$Unemployment_Change_Pct[i], "%"),
paste0(display_table$Population_Growth_Change_Pct[i], "%"),
display_table$Priority_Area[i]
)
output_lines <- c(output_lines, row_line)
}
# Print all at once
cat(paste(output_lines, collapse = "\n"))
print(model_metrics, row.names = FALSE, digits = 4)
# Sort by population growth for better visualization
pop_sorted <- analysis_data[order(analysis_data$Pop_Growth), ]
model2_predictions <- fitted(model_2)
model2_residuals <- residuals(model_2)
# Create a comprehensive analysis dataframe
analysis_data <- data.frame(
Suburb = data$Suburb_name,
Actual_Price = data$Median_price_2023,
Predicted_Price = model2_predictions,
Residuals = model2_residuals,
Pop_Growth = data$Historical_population_growth,
Unemployment = data$Historical_unemployment_rate,
Priority_Area = data$Historical_priority_growth_area,
Pop_Growth_Squared = data$Historical_population_growth^2,
Interaction_Unemp_Pop = data$Historical_unemployment_rate * data$Historical_population_growth,
Interaction_Pop_Priority = data$Historical_population_growth * data$Historical_priority_growth_area
)
# Sort by predicted price for rankings
analysis_data <- analysis_data[order(-analysis_data$Predicted_Price), ]
# Sort by population growth for better visualization
pop_sorted <- analysis_data[order(analysis_data$Pop_Growth), ]
plot(pop_sorted$Pop_Growth, pop_sorted$Pop_Growth_Squared,
col = ifelse(pop_sorted$Priority_Area == 1, "red", "blue"),
pch = 16, cex = 1.1,
xlab = "Population Growth Rate (%)",
ylab = "Population Growth Squared",
main = "Model 2: Quadratic Population Growth\nEffect by Suburb")
# Add a smooth curve to show the quadratic relationship
curve(x^2, from = min(pop_sorted$Pop_Growth), to = max(pop_sorted$Pop_Growth),
add = TRUE, col = "darkgreen", lwd = 2)
# Label the most extreme suburbs
extreme_indices <- c(1, nrow(pop_sorted))
text(pop_sorted$Pop_Growth[extreme_indices],
pop_sorted$Pop_Growth_Squared[extreme_indices],
labels = pop_sorted$Suburb[extreme_indices],
pos = c(4, 2), cex = 0.8, font = 2)
# Add legend
legend("topleft", c("Priority Area", "Regular Area", "Quadratic Curve"),
col = c("red", "blue", "darkgreen"),
pch = c(16, 16, NA), lty = c(NA, NA, 1), lwd = c(NA, NA, 2), cex = 0.8)
############################################################################
model2_predictions <- fitted(model_2)
model2_residuals <- residuals(model_2)
# Create a comprehensive analysis dataframe
analysis_data <- data.frame(
Suburb = data$Suburb_name,
Actual_Price = data$Median_price_2023,
Predicted_Price = model2_predictions,
Residuals = model2_residuals,
Pop_Growth = data$Historical_population_growth,
Unemployment = data$Historical_unemployment_rate,
Priority_Area = data$Historical_priority_growth_area,
Pop_Growth_Squared = data$Historical_population_growth^2,
Interaction_Unemp_Pop = data$Historical_unemployment_rate * data$Historical_population_growth,
Interaction_Pop_Priority = data$Historical_population_growth * data$Historical_priority_growth_area
)
# Sort by predicted price for rankings
analysis_data <- analysis_data[order(-analysis_data$Predicted_Price), ]
# Sort by population growth for better visualization
pop_sorted <- analysis_data[order(analysis_data$Pop_Growth), ]
# ============================================================================
# PLOT 3: Interaction Effects - Population Growth × Priority Area
# ============================================================================
# Create interaction plot
priority_suburbs <- analysis_data[analysis_data$Priority_Area == 1, ]
regular_suburbs <- analysis_data[analysis_data$Priority_Area == 0, ]
plot(regular_suburbs$Pop_Growth, regular_suburbs$Predicted_Price,
col = "steelblue", pch = 16, cex = 1.1,
xlab = "Population Growth Rate (%)",
ylab = "Model 2 Predicted Price ($)",
main = "Model 2: Interaction Effects\nPopulation Growth × Priority Area",
xlim = range(analysis_data$Pop_Growth),
ylim = range(analysis_data$Predicted_Price))
# Add priority area points
points(priority_suburbs$Pop_Growth, priority_suburbs$Predicted_Price,
col = "red", pch = 17, cex = 1.2)
# Add trend lines for each group
if(nrow(regular_suburbs) > 2) {
reg_fit <- lm(Predicted_Price ~ Pop_Growth, data = regular_suburbs)
abline(reg_fit, col = "steelblue", lwd = 2)
}
if(nrow(priority_suburbs) > 2) {
pri_fit <- lm(Predicted_Price ~ Pop_Growth, data = priority_suburbs)
abline(pri_fit, col = "red", lwd = 2)
}
# Label top 5 suburbs from each category
top_regular <- head(regular_suburbs[order(-regular_suburbs$Predicted_Price), ], 3)
top_priority <- head(priority_suburbs[order(-priority_suburbs$Predicted_Price), ], 3)
text(top_regular$Pop_Growth, top_regular$Predicted_Price,
labels = top_regular$Suburb, pos = 3, cex = 0.7, col = "steelblue")
if(nrow(top_priority) > 0) {
text(top_priority$Pop_Growth, top_priority$Predicted_Price,
labels = top_priority$Suburb, pos = 3, cex = 0.7, col = "red")
}
legend("topleft", c("Regular Areas", "Priority Areas"),
col = c("steelblue", "red"), pch = c(16, 17), cex = 0.8)
############################################################################
model2_predictions <- fitted(model_2)
model2_residuals <- residuals(model_2)
# Create a comprehensive analysis dataframe
analysis_data <- data.frame(
Suburb = data$Suburb_name,
Actual_Price = data$Median_price_2023,
Predicted_Price = model2_predictions,
Residuals = model2_residuals,
Pop_Growth = data$Historical_population_growth,
Unemployment = data$Historical_unemployment_rate,
Priority_Area = data$Historical_priority_growth_area,
Pop_Growth_Squared = data$Historical_population_growth^2,
Interaction_Unemp_Pop = data$Historical_unemployment_rate * data$Historical_population_growth,
Interaction_Pop_Priority = data$Historical_population_growth * data$Historical_priority_growth_area
)
# Sort by predicted price for rankings
analysis_data <- analysis_data[order(-analysis_data$Predicted_Price), ]
# Sort by population growth for better visualization
pop_sorted <- analysis_data[order(analysis_data$Pop_Growth), ]
Get suburbs with largest residuals (both positive and negative)
############################################################################
model2_predictions <- fitted(model_2)
model2_residuals <- residuals(model_2)
# Create a comprehensive analysis dataframe
analysis_data <- data.frame(
Suburb = data$Suburb_name,
Actual_Price = data$Median_price_2023,
Predicted_Price = model2_predictions,
Residuals = model2_residuals,
Pop_Growth = data$Historical_population_growth,
Unemployment = data$Historical_unemployment_rate,
Priority_Area = data$Historical_priority_growth_area,
Pop_Growth_Squared = data$Historical_population_growth^2,
Interaction_Unemp_Pop = data$Historical_unemployment_rate * data$Historical_population_growth,
Interaction_Pop_Priority = data$Historical_population_growth * data$Historical_priority_growth_area
)
# Sort by predicted price for rankings
analysis_data <- analysis_data[order(-analysis_data$Predicted_Price), ]
# Sort by population growth for better visualization
pop_sorted <- analysis_data[order(analysis_data$Pop_Growth), ]
#Get suburbs with largest residuals (both positive and negative)
analysis_data$Abs_Residuals <- abs(analysis_data$Residuals)
top_residuals <- head(analysis_data[order(-analysis_data$Abs_Residuals), ], 20)
# Create color coding for over/under prediction
res_colors <- ifelse(top_residuals$Residuals > 0, "green", "orange")
# Create bar plot of residuals
barplot(top_residuals$Residuals,
names.arg = top_residuals$Suburb,
col = res_colors,
main = "Model 2: Residual Analysis\nTop 20 Suburbs by Prediction Error",
ylab = "Residuals ($)",
las = 2,  # Rotate x-axis labels
cex.names = 0.7)
# Add horizontal line at zero
abline(h = 0, col = "black", lwd = 2)
# Create a properly formatted top 30 suburbs table with multiple sorting criteria
# Sort by Price_change (desc), Population_growth_change (desc), Unemployment_change (desc)
investment_sorted <- investment_analysis[order(-investment_analysis$Price_change,
-investment_analysis$Population_growth_change,
-investment_analysis$Unemployment_change), ]
top_30_suburbs <- investment_sorted[1:30, ]
# Create a clean data frame for display
display_table <- data.frame(
Rank = 1:30,
Suburb = top_30_suburbs$Suburb_name,
Current_Price_2023 = format(round(top_30_suburbs$Median_price_2023, 0), big.mark = ","),
Predicted_Price_2024 = format(round(top_30_suburbs$Predicted_median_price_2024, 0), big.mark = ","),
Price_change = format(round(top_30_suburbs$Price_change, 0), big.mark = ","),
Price_Growth_Pct = round(top_30_suburbs$Price_change_percent, 1),
Income_Growth_Pct = round(top_30_suburbs$Income_change_percent, 1),
Unemployment_Change_Pct = round(top_30_suburbs$Unemployment_change_percent, 1),
Population_Growth_Change_Pct = round(top_30_suburbs$Population_growth_change_percent, 1),
Priority_Area = ifelse(top_30_suburbs$Predicted_priority_growth_area_2024 == 1, "Yes", "No")
)
output_lines <- c()
# Print column headers
header <- sprintf("%-4s %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
"Rank", "Suburb", "2023 Price", "2024 Predicted", "Price Change",
"Price %", "Income %", "Unemploy. %", "Pop. Growth %", "Priority")
output_lines <- c(output_lines, header)
output_lines <- c(output_lines, paste(rep("-", 150), collapse = ""))
for (i in 1:nrow(display_table)) {
row_line <- sprintf("%-4d %-20s %-15s %-17s %-14s %-12s %-12s %-15s %-22s %-10s",
display_table$Rank[i],
substr(display_table$Suburb[i], 1, 20),
paste0("$", display_table$Current_Price_2023[i]),
paste0("$", display_table$Predicted_Price_2024[i]),
paste0("$", display_table$Price_change[i]),
paste0(display_table$Price_Growth_Pct[i], "%"),
paste0(display_table$Income_Growth_Pct[i], "%"),
paste0(display_table$Unemployment_Change_Pct[i], "%"),
paste0(display_table$Population_Growth_Change_Pct[i], "%"),
display_table$Priority_Area[i]
)
output_lines <- c(output_lines, row_line)
}
# Print all at once
cat(paste(output_lines, collapse = "\n"))
# ======================================================================
