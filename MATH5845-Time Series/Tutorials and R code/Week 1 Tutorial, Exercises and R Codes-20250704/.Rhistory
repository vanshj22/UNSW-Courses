library(astsa)
library(forecast)
IowaData = read.csv("IOWA.csv")
library(astsa)
#data(package="astsa")
library(itsmr)
library("dygraphs")
# Convert the 'dowj' data (from itsmr package) into a time series object
DJUtilIndex = ts(dowj)
# Set up the graphics window to show 2 rows and 2 columns of plots
par(mfrow=c(2,2))
# Plot the original Dow Jones Utilities Index time series
ts.plot(DJUtilIndex, main = "Original Series")
# Plot the autocorrelation function (ACF) of the original series
acf(DJUtilIndex, main = "ACF of Original Series")
DJUtilIndex = ts(dowj)
# Set up the graphics window to show 2 rows and 2 columns of plots
par(mfrow=c(2,2))
# Plot the original Dow Jones Utilities Index time series
ts.plot(DJUtilIndex, main = "Original Series")
# Plot the autocorrelation function (ACF) of the original series
acf(DJUtilIndex, main = "ACF of Original Series")
# Take the first difference to remove trend and make the series stationary
DJUtilIndex.D1 <- diff(DJUtilIndex)
# Plot the differenced series
ts.plot(DJUtilIndex.D1, main = "Differenced Series (Lag 1)")
abline(h=0)  # Add a horizontal reference line at 0
# Plot the ACF of the differenced series
acf(DJUtilIndex.D1, main = "ACF of Differenced Series")
DJUtilIndex.arima<- arima(DJUtilIndex, order = c(1,1,1),
include.mean = FALSE, method = "CSS")
DJUtilIndex.arima
# Fit an ARMA(1,1) model to the differenced data using Conditional Sum of Squares (CSS) method
DJUtilIndex.ARMA11_CSS <- arima(DJUtilIndex.D1, order = c(1,0,1),
include.mean = FALSE, method = "CSS")
DJUtilIndex.ARMA11_CSS
# Fit an ARMA(1,1) model to the differenced data using Maximum Likelihood (ML) method
DJUtilIndex.ARMA11_ML <- arima(DJUtilIndex.D1, order = c(1,0,1),
include.mean = FALSE, method = "ML")
# Display the result of the ML-fitted ARMA(1,1) model
DJUtilIndex.ARMA11_ML
library(astsa)
LakeLevel<-scan('LakeHuronLevels.txt')
library(astsa)
LakeLevel<-scan('LakeHuronLevels.txt')
ts.plot(ts(LakeLevel,start=1875),ylab="Level (ft)")
Time<-1:98
LSfit<-lm(LakeLevel~Time)
summary(LSfit)
LSfit2<-lm(LakeLevel~Time+I(Time^2))
plot(Time,LakeLevel,type="l")
lines(LSfit$fitted,col="red")
lines(LSfit2$fitted,col="green")
summary(LSfit2)
par(mfrow=c(2,1))
acf2(LSfit$residuals)
acf2(LSfit2$residuals)
LakeLevels.AR1<-arima(LakeLevel,order=c(1,0,0),xreg=Time)
LakeLevels.AR1
Trendzval<-LakeLevels.AR1$coef[3]/diag(LakeLevels.AR1$var.coef)[3]^0.5
Trendpval<-2*pnorm(-abs(Trendzval))
print(Trendpval)
arimamodelsummary<-function(arimamodel){
coef<-arimamodel$coef
se<-diag(arimamodel$var.coef)^0.5
zstat<-coef/se
pval<-2*pnorm(-abs(zstat))
results<-cbind(coef,se,zstat,pval)
colnames(results)<-c("Estimate","s.e.","z-val","p-val")
print(round(results,4))
}
arimamodelsummary(LakeLevels.AR1)
par(mfrow=c(1,2))
acf(LakeLevels.AR1$res)
qqnorm(LakeLevels.AR1$res)
LakeLevels.AR2<-arima(LakeLevel,order=c(2,0,0),xreg=Time)
arimamodelsummary(LakeLevels.AR2)
par(mfrow=c(1,2))
acf(LakeLevels.AR2$res)
qqnorm(LakeLevels.AR2$res)
LakeLevels.ARMA11<-arima(LakeLevel,order=c(1,0,1),xreg=Time)
LakeLevels.ARMA11
arimamodelsummary(LakeLevels.ARMA11)
par(mfrow=c(1,2))
acf(LakeLevels.ARMA11$res)
qqnorm(LakeLevels.ARMA11$res)
par(mfrow=c(1,1))
plot(Time,LakeLevel,type="l")
lines(Time,LakeLevel-LakeLevels.AR1$residuals,col="blue")
lines(Time,LakeLevel-LakeLevels.AR2$residuals,col="red")
lines(Time,LakeLevel-LakeLevels.ARMA11$residuals,col="green")
Time2<-Time^2
LakeLevels.QuadTrend.AR2<-arima(LakeLevel,order=c(2,0,0),xreg=cbind(Time,Time2))
arimamodelsummary(LakeLevels.QuadTrend.AR2)
par(mfrow=c(1,2))
acf(LakeLevels.QuadTrend.AR2$res)
qqnorm(LakeLevels.QuadTrend.AR2$res)
